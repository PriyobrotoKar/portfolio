---
import Socials from './Socials.astro'
import Skills from './Skills.astro'
import { cosmic } from '@/lib/cosmic'
import { motion } from 'framer-motion'
import { cn } from '@/lib/utils'
import AvailableStatus from '@/components/AvailableStatus.astro'

const {
  object: { metadata: details }
} = await cosmic.objects
  .findOne({
    type: 'personal-details',
    slug: 'details'
  })
  .props('slug,title,metadata')
  .depth(1)
---

<section
  class="flex h-screen max-h-[60rem] justify-center items-center gap-10 flex-col p-10"
>
  <div class="w-[16rem] p-2.5 relative">
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      client:load
      transition={{ delay: 0.3, duration: 1 }}
    >
      <div
        class="absolute w-full h-full inset-0 border rounded-full animate-[spin_5s_linear_infinite] border-neutral-800 bg-gradient-to-t from-neutral-950 to-neutral-800"
      >
      </div>
    </motion.div>
    <motion.img
      client:load
      initial={{ scale: 0.95, opacity: 0 }}
      animate={{ scale: 1, opacity: 1 }}
      transition={{ duration: 0.8, ease: 'easeInOut' }}
      className="saturate-0 brightness-[1] rounded-full mx-auto"
      src={'/pfp.png'}
      alt=""
    />
    <Skills />
  </div>

  <div class="flex flex-col items-center gap-4">
    <motion.div
      client:load
      initial={{ filter: 'blur(10px)', y: 8, opacity: 0 }}
      animate={{ opacity: 1, filter: 'blur(0)', y: 0 }}
      transition={{ duration: 1 }}
    >
      <h1
        class="text-5xl font-bold drop-shadow-[0_0px_12.8px_rgba(255,255,255,0.20)] shadow-white"
      >
        {details.name}
      </h1>
    </motion.div>
    <AvailableStatus />
    <div class="text-md text-muted-foreground">
      {
        details.roles.map(({ role }: { role: string }, i: number) => {
          return (
            <motion.div
              client:load
              initial={{ opacity: 0, y: 8, filter: 'blur(10px)' }}
              animate={{ opacity: 1, y: 0, filter: 'blur(0px)' }}
              transition={{ duration: 0.8, delay: i * 0.3 + 0.5 }}
              className={cn('inline-block', i !== 0 && 'ml-1')}
            >
              <span>
                {role}{' '}
                <motion.div
                  client:load
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.5, delay: 2 }}
                  className="inline"
                >
                  {i !== details.roles.length - 1 && `â€¢`}
                </motion.div>
              </span>
            </motion.div>
          )
        })
      }
    </div>
  </div>
  <Socials />
</section>
